% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/name_checkvar_match_fun.R
\name{name_checkvar_match}
\alias{name_checkvar_match}
\title{Match Names to Climactor_id using and exact match to Key_dict with extra variables.}
\usage{
name_checkvar_match(x, checkvar)
}
\arguments{
\item{x}{A data frame containing at least 'name' (the text to be matched) and 'iso' (country code) columns.}

\item{checkvar}{A character string specifying the column name (e.g., "population") from \code{key_dict}
that should be retrieved and joined back to \code{x} alongside the matched \code{climactor_id} to be used for supplementary checks.}
}
\value{
A data frame based on the input \code{x}, but with three new columns added:
  \enumerate{
    \item The original \code{checkvar} column is renamed to \code{\{checkvar\}\_check}.
    \item \code{climactor_id}: The resulting matched identifier.
    \item \code{checkvar}: The value from \code{key_dict} corresponding to the matched \code{climactor_id}.
  }
  The function filters for matches where all lookups results are the same and non-NA \code{climactor_id}.
}
\description{
This function takes a primary data frame to be cleaned (\code{x}) containing at least the 'name' and 'iso' columns
and attempts to match the names to  a 'climactor_id' using the key_dict (\code{key_dict}) primarily its right and wrong columns
It performs several lookups based on original name, modified (lowercase, ASCII)
name, and both 'right' (correct) and 'wrong' (alternative) entries in the dictionary.
It filter for duplicates keeping only the matches where all retrieved \code{climactor_id}s are consistent.
Finally, it joins the retrieved \code{climactor_id} back to the original data and also retrieves
a specified \code{checkvar} associated with the matched ID which can be either population or area.

This function requires the \code{key_dict} data frame to be available in the global environment,
and it assumes \code{x} has 'name' and 'iso' columns. Requieres \code{dplyr},
\code{tidyr}, and \code{stringi}.
}
